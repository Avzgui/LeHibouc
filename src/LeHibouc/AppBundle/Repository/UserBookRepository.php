<?php

namespace LeHibouc\AppBundle\Repository;

use LeHibouc\AppBundle\Entity\User;
use LeHibouc\EBookLibraryBundle\Entity\Book;

/**
 * UserBookRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserBookRepository extends \Doctrine\ORM\EntityRepository
{
	/**
	 * Get array of the books currently borrowed by an user
	 *
	 * @param User user
	 *
	 * @return Array of Book
	 */
	public function getBooksBorrowedByUser(User $user)
	{
		//Create query request
		$query = $this->createQueryBuilder('ub')
		  ->leftJoin('ub.book', 'b')
		  	->addSelect('b')
		  ->where('ub.user = :user')
		  	->setParameter('user', $user)
		  ->andWhere('ub.returned IS NULL')
		  ->orderBy('ub.borrow', 'DESC')
		  ->getQuery()
		;

		//Return the result
		return $query->getResult();
	}

	/**
	 * Get if a book is already borrowed or not by user
	 *
	 * @param User user
	 * @param Book book
	 *
	 * @return UserBook or null
	 */
	public function isAlreadyBorrowed(User $user, Book $book)
	{
		$query = $this->createQueryBuilder('ub')
		  ->where('ub.user = :user')
		  	->setParameter('user', $user)
		  ->andWhere('ub.book = :book')
		  	->setParameter('book', $book)
		  ->andWhere('ub.returned IS NULL')
		  ->getQuery()
		;

		return $query->getOneOrNullResult();
	}
}
